package org.jorion.euler.problem;

import org.jorion.euler.util.Utils;

/**
 * Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
 * 
 * <pre>
 * Triangle        Tn=n(n+1)/2         1, 3, 6, 10, 15, ...
 * Pentagonal      Pn=n(3n−1)/2        1, 5, 12, 22, 35, ...
 * Hexagonal       Hn=n(2n−1)          1, 6, 15, 28, 45, ...
 * </pre>
 * 
 * It can be verified that T(285) = P(165) = H(143) = 40755.
 * <p>
 * Find the next triangle number that is also pentagonal and hexagonal.
 */
public class Euler045
{
    public static void main(String[] args)
    {
        final int n = 285;

        long res; // 1_533_776_805 = t (55385)
        long delta;
        
        Utils.start();
        res = calc1(n);
        delta = Utils.stop();
        Utils.print("Simple      ", res, delta);
    }

    private static long calc1(int n)
    {
        long tn = 0;
        while (true) {
            n++;
            tn = t(n);
            double pinv = pinv(tn);
            if (pinv == (long) pinv) {
                double hinv = hinv(tn);
                if (hinv == (long) hinv) {
                    break;
                }
            }
        }
        return tn;
    }

    private static long t(long n)
    {
        return n * (n + 1) / 2;
    }

    @SuppressWarnings("unused")
    private static double tinv(long t)
    {
        return (-1 + Math.sqrt(1 + 8 * t)) / 2;
    }

    @SuppressWarnings("unused")
    private static long p(long n)
    {
        return n * (3 * n - 1) / 2;
    }

    private static double pinv(long p)
    {
        return (1 + Math.sqrt(1 + 24 * p)) / 6;
    }

    @SuppressWarnings("unused")
    private long h(long n)
    {
        return n * (2 * n - 1);
    }

    private static double hinv(long h)
    {
        return (1 + Math.sqrt(1 + 8 * h)) / 4;
    }
}
