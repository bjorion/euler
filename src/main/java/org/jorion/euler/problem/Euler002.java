package org.jorion.euler.problem;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 * <pre>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144...
 * </pre>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four millions, find the sum of the even-valued terms.
 */
public class Euler002 {

	public static void main(String[] args) {

		final long max = 4 * 1_000_000;

		int a = 1;
		int b = 1;
		int c;
		int sum = 0;
		long start, delta;

		start = System.nanoTime();
		while (true) {

			if ((b & 0b1) == 0) {
				sum += b;
			}
			c = a + b;
			a = b;
			b = c;

			if (c > max) {
				break;
			}
		}
		delta = System.nanoTime() - start;

		// 4613732
		System.out.println("Sum: " + sum + ", delta: " + delta);
	}
}
